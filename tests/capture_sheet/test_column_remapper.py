from capture_sheet.column_remapper import ColumnRemapper


def test_column_remapper():
    column_remapper = ColumnRemapper(
        original_columns=[
            "event",
            "event_description",
            "kpi",
            "raised_by",
            "received_by",
            "entity",
            "entity_cardinality",
            "property_type",
            "attribute",
            "attribute_cardinality",
            "attribute_alias",
            "semantic_type",
            "sample_values",
            "variety",
            "classification",
            "schema_type",
            "column",
            "table",
            "database",
            "not_null",
            "is_unique",
            "reference_column",
            "reference_table",
            "reference_database",
            "attribute_timing",
        ]
    )

    column_remapper.sorted_columns == [
        "event",
        "description",
        "kpi",
        "raised_by",
        "received_by",
        "entity",
        "entity_cardinality",
        "attribute",
        "type",
        "sample_values",
        "attribute_cardinality",
        "attribute_timing",
        "semantic_type",
        "alias",
        "classification",
        "variety",
        "schema_type",
        "database",
        "table",
        "column",
        "not_null",
        "is_unique",
        "reference_database",
        "reference_table",
        "reference_column",
    ]

    column_remapper.renamed_columns == {
        "event": "event",
        "event_description": "description",
        "kpi": "kpi",
        "raised_by": "raised_by",
        "received_by": "received_by",
        "entity": "entity",
        "entity_cardinality": "entity_cardinality",
        "attribute": "attribute",
        "property_type": "type",
        "sample_values": "sample_values",
        "attribute_cardinality": "attribute_cardinality",
        "attribute_timing": "attribute_timing",
        "semantic_type": "semantic_type",
        "attribute_alias": "alias",
        "classification": "classification",
        "variety": "variety",
        "schema_type": "schema_type",
        "database": "database",
        "table": "table",
        "column": "column",
        "not_null": "not_null",
        "is_unique": "is_unique",
        "reference_database": "reference_database",
        "reference_table": "reference_table",
        "reference_column": "reference_column",
    }

    column_remapper.column_map == {
        "event_": ["event", "description", "kpi", "raised_by", "received_by"],
        "entity_": ["entity", "entity_cardinality"],
        "property_": [
            "attribute",
            "type",
            "sample_values",
            "attribute_cardinality",
            "attribute_timing",
        ],
        "attribute_": ["semantic_type", "alias", "classification", "variety"],
        "source_": [
            "schema_type",
            "database",
            "table",
            "column",
            "not_null",
            "is_unique",
        ],
        "reference_": ["reference_database", "reference_table", "reference_column"],
    }

    column_remapper.custom_columns == [
        "event_description",
        "kpi",
        "property_type",
        "sample_values",
        "attribute_alias",
    ]
